name: Spec-Kit Integration

on:
  issues:
    types: [opened, edited, labeled]
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main, develop]

jobs:
  validate-specifications:
    runs-on: ubuntu-latest
    if: contains(github.event.issue.labels.*.name, 'specification') || github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm install -g spec-kit
        
    - name: Validate specification format
      if: contains(github.event.issue.labels.*.name, 'specification')
      run: |
        echo "Validating specification in issue #${{ github.event.issue.number }}"
        # Add spec-kit validation commands here
        
    - name: Generate task breakdown
      if: contains(github.event.issue.labels.*.name, 'specification') && github.event.action == 'labeled'
      run: |
        echo "Generating task breakdown for specification"
        # Add spec-kit task generation commands here
        
    - name: Validate implementation against spec
      if: github.event_name == 'pull_request'
      run: |
        echo "Validating PR implementation against specifications"
        # Add spec-kit validation for PR

  quality-gates:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test
      
    - name: Run linting
      run: npm run lint
      
    - name: Type checking
      run: npm run typecheck
      
    - name: Security audit
      run: npm audit --audit-level moderate
      
    - name: Check test coverage
      run: npm run test:coverage
      
  claude-code-integration:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Validate CLAUDE.md
      run: |
        if [ ! -f "CLAUDE.md" ]; then
          echo "❌ CLAUDE.md not found. Please create project configuration file."
          exit 1
        fi
        echo "✅ CLAUDE.md found"
        
    - name: Check MCP server configuration
      run: |
        if [ -f "MCP_SERVERS.json" ]; then
          echo "✅ MCP server configuration found"
          # Validate JSON format
          cat MCP_SERVERS.json | jq . > /dev/null
          echo "✅ MCP configuration is valid JSON"
        else
          echo "⚠️ No MCP server configuration found. Consider adding MCP_SERVERS.json"
        fi
        
    - name: Validate development philosophy compliance
      run: |
        if [ -f "DEVELOPMENT_PHILOSOPHY.md" ]; then
          echo "✅ Development philosophy documented"
        fi
        
        if [ -f "RESEARCH_FINDINGS.md" ]; then
          echo "✅ Research documentation found"
        fi

  documentation-sync:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Generate project documentation
      run: |
        echo "# Project Documentation" > docs/README.md
        echo "" >> docs/README.md
        echo "This documentation is automatically generated from project specifications." >> docs/README.md
        echo "" >> docs/README.md
        
        if [ -f "CLAUDE.md" ]; then
          echo "## Claude Code Configuration" >> docs/README.md
          echo "" >> docs/README.md
          echo "See [CLAUDE.md](../CLAUDE.md) for AI-assisted development configuration." >> docs/README.md
          echo "" >> docs/README.md
        fi
        
        if [ -f "DEVELOPMENT_PHILOSOPHY.md" ]; then
          echo "## Development Philosophy" >> docs/README.md
          echo "" >> docs/README.md
          echo "See [DEVELOPMENT_PHILOSOPHY.md](../DEVELOPMENT_PHILOSOPHY.md) for our development principles." >> docs/README.md
          echo "" >> docs/README.md
        fi
        
    - name: Commit documentation updates
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: "📚 Auto-update documentation"
        file_pattern: "docs/"
        commit_user_name: "github-actions[bot]"
        commit_user_email: "github-actions[bot]@users.noreply.github.com"